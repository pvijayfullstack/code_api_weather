{"ast":null,"code":"var _jsxFileName = \"/Users/vijaykumar/vijay/EX/code_api_weather/src/components/weather/detail.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { CardColumns, Card } from 'react-bootstrap';\nimport { fetchView } from '../../actions/weather/view';\n\nclass Detail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getImage = view => {\n      let image = '';\n\n      if (view.media && view.media[0]) {\n        image = view.media[0]['media-metadata'][2].url;\n      }\n\n      return image;\n    };\n\n    this.viewDetail = view => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      src: this.getImage(view),\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, view.title), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, view.source), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, view.abstract))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/view\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Back\")));\n  }\n\n  componentDidMount() {\n    const dispatch = this.props.dispatch;\n    dispatch(fetchView(1));\n  }\n\n  render() {\n    const view = this.props.view;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, Object.entries(view).length !== 0 ? this.viewDetail(view) : '');\n  }\n\n}\n\nconst mapToStateProps = (state, props) => {\n  const id = props.match.params.id;\n\n  const _state$viewed$view = state.viewed.view,\n        _state$viewed$view2 = _state$viewed$view === void 0 ? [] : _state$viewed$view,\n        results = _state$viewed$view2.results;\n\n  const view = results && results.filter(o => parseInt(o.id) === parseInt(id));\n  return {\n    view: view && view.length > 0 ? view[0] : {}\n  };\n};\n\nexport default connect(mapToStateProps)(Detail);","map":{"version":3,"sources":["/Users/vijaykumar/vijay/EX/code_api_weather/src/components/weather/detail.js"],"names":["React","Component","connect","Link","CardColumns","Card","fetchView","Detail","getImage","view","image","media","url","viewDetail","title","source","abstract","fontWeight","componentDidMount","dispatch","props","render","Object","entries","length","mapToStateProps","state","id","match","params","viewed","results","filter","o","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { CardColumns, Card } from 'react-bootstrap';\n\nimport { fetchView } from '../../actions/weather/view'\n\nclass Detail extends Component {\n\n    componentDidMount() {\n        const { dispatch } = this.props\n        dispatch(fetchView(1))\n    }\n\n    getImage = view => {\n        let image = ''\n        if (view.media && view.media[0]) {\n            image =  view.media[0]['media-metadata'][2].url \n        }\n        return image     \n    }\n\n    viewDetail = view => (\n         <div>\n            <br />  \n                <CardColumns> \n                    <Card.Img src= {this.getImage(view)} height=\"300\"/>\n                </CardColumns>\n                <br />\n                <Card>\n                    <Card.Body>\n                    <Card.Title>{ view.title }</Card.Title>\n                    <Card.Text>\n                    { view.source}\n                    </Card.Text>\n                    <Card.Text>\n                    { view.abstract}\n                    </Card.Text>\n                    \n                    </Card.Body>\n                </Card>\n                <br />\n            <div><Link to=\"/view\" style={ {fontWeight: 'bold'}}>Back</Link></div>\n            </div>      \n            )\n\n    render() {\n       \n        const { view } = this.props\n        return(\n            <div>\n                { Object.entries(view).length !== 0 ? this.viewDetail(view) : ''}             \n             </div>\n        )\n    }\n}\n\nconst mapToStateProps = (state, props) => {\n\n    const id = props.match.params.id;\n\n    const { view: {  results } = [] } = state.viewed\n\n    const view = results && results.filter(o => parseInt(o.id) === parseInt(id) )\n\n\n    return {\n        view: view && view.length > 0 ? view[0] :  {}\n    }\n}\n\nexport default connect(mapToStateProps)(Detail) "]},"metadata":{},"sourceType":"module"}